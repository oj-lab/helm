# Default values for oj-lab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

platform:
  replicaCount: 1

  image:
    repository: ghcr.io/oj-lab/oj-lab-platform
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: main

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: oj-lab

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080
    
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: 8080
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: 8080

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: 
  - name: override-config
    configMap:
      name: ojlab-oj-lab-platform-configuration
      items:
        - key: config.yaml
          path: override.yaml

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: 
  - name: override-config
    mountPath: /workdir/override.yaml
    subPath: override.yaml

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    log:
      level: info
    database:
      dsn: "user=postgres password=development host=ojlab-postgresql-hl.default.svc.cluster.local port=5432 dbname=oj_lab sslmode=disable TimeZone=Asia/Shanghai"
    redis:
      host: "ojlab-redis-master.default.svc.cluster.local:6379"
    judger:
      host: "http://minikube:8000" # not used yet, judger currently not a service
    minio:
      endpoint: "ojlab-minio.default.svc.cluster.local:9000"

judger:
  replicaCount: 1

  image:
    repository: ghcr.io/oj-lab/judger
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: main
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  env:
  - name: PLATFORM_URI
    value: "http://ojlab-oj-lab-platform.default.svc.cluster.local:8080/"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: oj-lab

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8000
    
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: 8000
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: 8000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly:

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    log:
      level: info

# Dependencies
redis:
  auth:
    enabled: false
  master:
    containerPorts:
      redis: 6379
postgresql:
  global:
    postgresql:
      auth:
        password: development
        database: oj_lab
minio:
  auth:
    rootUser: minio-root-user
    rootPassword: minio-root-password